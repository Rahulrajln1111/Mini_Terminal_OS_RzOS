q
b kzalloc 
c
p sz 
ni
ni
ni
q
b kmalloc 
c
p size
ni
n
p first_va 
p npages 
q
b alloc_page_mapped 
c
n
p/x pa
n
n
p va
p/x va
q
n
si
n
p/x kernel_chunk 
n
vmmap
ni
ni
ls
vmmap
  context
  context
q
q
n
q
q
n
si
n
si
ni
si
ni
si
ni
vmmap
ni
si
ni
vmmap
 context
p kernel_main 
ni
q
n
n
n
vmmap
ni
vmmap
context
p kernel_main 
n
q
va = 0x4005000
p/x 0x4005000
p $1%4096
p/t 0x3ff
q
n
dq 0x1402000
n
ni
vmmap
!clear
context
q
n
p/x kernel_chunk 
p -0xf000ff53
p 0xf000ff53
q
q
n
si
n
p/x page_dir
n
disassemble 
list all
list 
list 72
list 76
q
n
ni
i r
dq 0x01000000
x/1xw (0xfffff000 + $di*4)
q
n
n
n
p/x ptr
dq 0x1402000
vmmap
n
si
i r
dq 0x1000000
dq 0x1000000 0x100
ni
p kernel_main 
dq 0x400
dq 0x4000
dq 0
ni
q
n
 q
n
ni
q
n
q
n
p/x ptr
p/x (ptr & 0xfffff000)  
p/x $1& 0xfffff000  
p/x 0x1402000&0xfffff000  
i r
context
dq 0x1000
niq
q
n
i r
ni
vmmap
ni
u 0x104049
vmmap
 !clear
disassemble kernel_main 
q
n
si
p/x chunk 
ni
ni
si
n
p virt_add 
p directory_idx 
p table_idx 
n
p/x entry 
n
p/x entry 
p/x table
n
p/x table[table_idx]
info registers cr2 cr0 cr3 eip esp
p/x $cr2   # faulting linear address
n
n
si
ni
si
p/x cur_dir 
p/x get_dir_chunk4gb(kernel_chunk)
p/x kernel_chunk 
q
n
p/x kernel_chunk 
q
n
si
n
p/x page_dir
n
list
list 80
b 76
c
context
p/x page_dir 
n
p/x chunk_4gb 
ni
p/x kernel_chunk 
q
n
p/x kernel_chunk 
n
c
q
n
ni
 q
q
n
p kernel_chunk 
dq 0xf000ff53
dq 0x1401000
p {paging_chunk_4gb }0x1401000
p {paging_chunk_4gb*}0x1401000
p (*strlen 
n
p ptr
n
i r cr3
si
q
n
si
n
p/x page_dir 
n
b 76
c
n
p/x chunk_4gb 
ni
p/x chunk_4gb 
ni
p/x chunk_4gb 
ni
p/x chunk_4gb 
ni
p/x kernel_chunk 
n 
p/x ptr
n
si
i r cr3
ni
p/x table[table_idx]
f
stack
stack 30
vmmap 0x104049
p test
search kernel_main 
q
p/x 104857600
q
n
x/1024xw 0x1000000  # physical address of page directory
x/1024xw 0x1000000  
